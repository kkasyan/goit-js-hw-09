{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,UAAWF,SAASC,cAAc,UAClCE,WAAYH,SAASC,cAAc,uBACnCG,UAAWJ,SAASC,cAAc,sBAClCI,YAAaL,SAASC,cAAc,yBA6BtC,SAASK,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAnCbV,EAAKC,KAAKiB,iBAAiB,UAE3B,SAAkBC,GAChBA,EAAIC,iBACJ,IAAIC,EAAc,EACdC,EACFC,OAAOvB,EAAKK,WAAWmB,OAASD,OAAOvB,EAAKM,UAAUkB,OAExD,IAAK,IAAIC,EAAI,EAAGA,EAAIF,OAAOvB,EAAKO,YAAYiB,OAAQC,GAAK,EACvDJ,GAAe,EACfC,GAAkBC,OAAOvB,EAAKM,UAAUkB,OAExChB,EAAca,EAAaC,GACxBI,MAAK,EAACjB,SAAEA,EAAQC,MAAEA,MACjBiB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqBpB,QAAiBC,MAAU,IAGnDoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBiB,EAAA7B,GAAS8B,OAAOG,QACd,sBAAoBtB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  submitBtn: document.querySelector('button'),\n  inputDelay: document.querySelector('input[name=\"delay\"]'),\n  inputStep: document.querySelector('input[name=\"step\"]'),\n  inputAmount: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  let positionNum = 0;\n  let delayStepCount =\n    Number(refs.inputDelay.value) - Number(refs.inputStep.value);\n\n  for (let i = 0; i < Number(refs.inputAmount.value); i += 1) {\n    positionNum += 1;\n    delayStepCount += Number(refs.inputStep.value);\n\n    createPromise(positionNum, delayStepCount)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","submitBtn","inputDelay","inputStep","inputAmount","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","positionNum","delayStepCount","Number","value","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.e211cd5e.js.map"}