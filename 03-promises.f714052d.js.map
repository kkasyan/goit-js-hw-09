{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,UAAWF,SAASC,cAAc,UAClCE,WAAYH,SAASC,cAAc,uBACnCG,UAAWJ,SAASC,cAAc,sBAClCI,YAAaL,SAASC,cAAc,yBA6BtC,SAASK,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAnCPV,EAAKC,KAAKiB,iBAAiB,UAE3B,SAAkBC,GAChBA,EAAIC,iBAKJ,IAJA,IAAIC,EAAc,EACdC,EACFC,OAAOvB,EAAKK,WAAWmB,OAASD,OAAOvB,EAAKM,UAAUkB,OAE/CC,EAAI,EAAGA,EAAIF,OAAOvB,EAAKO,YAAYiB,OAAQC,GAAK,EACvDJ,GAAe,EACfC,GAAkBC,OAAOvB,EAAKM,UAAUkB,OAExChB,EAAca,EAAaC,GACxBI,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACjBkB,EAAA9B,GAAS+B,OAAOC,QACd,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAGjDsB,OAAM,SAAAL,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBkB,EAAA9B,GAAS+B,OAAOI,QACd,sBAAqCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  submitBtn: document.querySelector('button'),\n  inputDelay: document.querySelector('input[name=\"delay\"]'),\n  inputStep: document.querySelector('input[name=\"step\"]'),\n  inputAmount: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  let positionNum = 0;\n  let delayStepCount =\n    Number(refs.inputDelay.value) - Number(refs.inputStep.value);\n\n  for (let i = 0; i < Number(refs.inputAmount.value); i += 1) {\n    positionNum += 1;\n    delayStepCount += Number(refs.inputStep.value);\n\n    createPromise(positionNum, delayStepCount)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","submitBtn","inputDelay","inputStep","inputAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","positionNum","delayStepCount","Number","value","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.f714052d.js.map"}